plugins {
    id 'org.quiltmc.loom' version '1.+'
    id 'maven-publish'
    id 'idea'
}

archivesBaseName = "${mod_id}-quilt-${minecraft_version}"

repositories {
    maven {
        name = 'TarraformersMC'
        url = 'https://maven.terraformersmc.com/releases'
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.layered() {
        mappings "org.quiltmc:quilt-mappings:${quilt_mappings_version}:intermediary-v2"
        officialMojangMappings()
    }

    modImplementation "org.quiltmc:quilt-loader:${quilt_loader_version}"
    modApi "org.quiltmc.quilted-fabric-api:quilted-fabric-api:${quilt_version}"
    modApi "com.terraformersmc:modmenu:${modmenu_version}"

    modImplementation "com.diontryban.ash:ash-quilt-${minecraft_version}:${ash_version}"

    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'

    implementation project(':Common')
}

loom {
    runs {
        client {
            client()
            setConfigName('Quilt Client')
            ideConfigGenerated(true)
            runDir('run')
        }
        server {
            server()
            setConfigName('Quilt Server')
            ideConfigGenerated(true)
            runDir('run')
        }
    }
    mixin {
        defaultRefmapName = "${mod_id}.refmap.json"
    }
}

processResources {
    from project(':Common').sourceSets.main.resources
    inputs.property 'version', project.version

    filesMatching('quilt.mod.json') {
        expand 'version': project.version
    }
}

tasks.withType(JavaCompile) {
    source(project(':Common').sourceSets.main.allSource)
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            from components.java
        }
    }

    repositories {
        maven {
            url 'file://' + System.getenv('local_maven')
        }
    }
}
